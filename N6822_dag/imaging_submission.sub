# imaging_submission_wlm.sub
# script to base submission of LGLBS imaging jobs
#
# Specify the HTCondor Universe (vanilla is the default and is used
#  for almost all jobs) and your desired name of the HTCondor log file,
#  which is where HTCondor will describe what steps it takes to run 
#  your job. Wherever you see $(Cluster), HTCondor will insert the 
#  queue number assigned to this set of jobs at the time of submission.
universe = docker
docker_image = nipingel/casa:latest
#
# Specify your executable (single binary or a script that runs several
#  commands), arguments, and a files for HTCondor to store standard
#  output (or "screen output").
#  $(Process) will be a integer number for each job, starting with "0"
#  and increasing for the relevant number of jobs.

## imaging ()
executable = image_channel.sh

## argument: split-out channel for imaging
## set up start and end channels
#chan = $INT(input_chan,%d)
chan = $INT(Process,%d)
arguments = $(fname) $(oname) $(chan)
log = WLM_image_chan$(chan).log
output = WLM_image_chan$(chan).out
error = WLM_image_chan$(chan).err

# Specify that HTCondor should transfer files to and from the
#  computer where each job runs. The last of these lines *would* be
#  used if there were any other files needed for the executable to use.
Requirements=(Target.HasCHTCStaging == true)
+HasCHTCStaging=true

# Tell HTCondor what amount of compute resources
#  each job will need on the computer where it runs.
transfer_input_files = image_channel.py, image_channel.sh
request_cpus = 1
request_memory = 20GB
request_disk = 10GB
#
# Tell HTCondor to run 1 instances of our job:
queue 500
#queue input_chan from leftover_channels.txt
